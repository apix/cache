language: php

php:
  - 5.3
  - 5.4
  - 5.5
  - 5.6
  - 7.0
  - hhvm

os:
  - linux
  - osx

services:
  - memcache     # will start memcache service
  - memcached    # will start memcached service
  - mongodb      # will start mongodb service
  - redis-server # will start the redis server

matrix:
  allow_failures:
    - php: 7.0
    - php: hhvm

env:
  - DB=apc
  - DB=redis
  - DB=mongodb
  - DB=sqlite
  - DB=mysql
  - DB=pgsql
  - DB=memcache
  - DB=memcached

before_script:
  # install memcached
  - if [ "`phpenv version-name`" != "hhvm" ]; then echo "extension = memcached.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini; fi

  # install memcache
  - if [ "`phpenv version-name`" != "hhvm" ]; then echo "extension = memcache.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini; fi

  # install APC/APCU
  - if [ "`phpenv version-name`" == "5.3" ] || [ "`phpenv version-name`" == "5.4" ]; then echo "extension = apc.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini; fi
  - if [ "`phpenv version-name`" == "5.5" ] || [ "`phpenv version-name`" == "5.6" ]; then printf "yes\n" | pecl install apcu-beta; fi
  - if [ "$DB" = "apc" ] && [ "`phpenv version-name`" != "hhvm" ]; then echo "apc.enable_cli=1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini; fi

  # install Redis
  - if [ "`phpenv version-name`" != "hhvm" ]; then echo "extension=redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini; fi
  - if [ "$DB" = "redis" ]; then git clone --branch=master --depth=1 git://github.com/nicolasff/phpredis.git phpredis; cd phpredis && phpize && ./configure && make && sudo make install && cd ..; rm -fr phpredis; fi

  # install MySQL
  - if [ "$DB" = "mysql" ]; then mysql -e 'DROP DATABASE IF EXISTS apix_tests;'; fi
  - if [ "$DB" = "mysql" ]; then mysql -e 'CREATE DATABASE IF NOT EXISTS apix_tests;'; fi

  # install PGSQL
  - if [ "$DB" = "pgsql" ]; then psql -c 'DROP DATABASE IF EXISTS apix_tests;' -U postgres; fi
  - if [ "$DB" = "pgsql" ]; then psql -c 'CREATE DATABASE apix_tests;' -U postgres; fi

  # install required packages
  #- phpenv rehash
  - travis_retry composer self-update
  - travis_retry composer install -o --no-interaction --prefer-source

  # create log dir
  - mkdir -p build/logs

script:
  - phpunit --coverage-clover build/logs/clover.xml

after_script:
  - if [ "`phpenv version-name`" != "hhvm" ]; then wget https://scrutinizer-ci.com/ocular.phar; fi;
  - if [ "`phpenv version-name`" != "hhvm" ]; then php ocular.phar code-coverage:upload --format=php-clover build/logs/clover.xml; fi;
  - php vendor/bin/coveralls -v

notifications:
  irc: "irc.freenode.org#ouarz"
  email:
    recipients:
      - dev-team@ouarz.net
    on_success: change
    on_failure: change
